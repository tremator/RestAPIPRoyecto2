// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProyectoWeb2.Models;

namespace ProyectoWeb2.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ProyectoWeb2.Models.Category", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id")
                        .HasName("pk_categorys");

                    b.ToTable("categorys");
                });

            modelBuilder.Entity("ProyectoWeb2.Models.News", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("categoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<string>("description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<long>("newsSourceId")
                        .HasColumnType("bigint")
                        .HasColumnName("news_source_id");

                    b.Property<List<string>>("tags")
                        .HasColumnType("text[]")
                        .HasColumnName("tags");

                    b.Property<string>("title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<long>("userId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_news");

                    b.HasIndex("categoryId")
                        .HasDatabaseName("ix_news_category_id");

                    b.HasIndex("newsSourceId")
                        .HasDatabaseName("ix_news_news_source_id");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_news_user_id");

                    b.ToTable("news");
                });

            modelBuilder.Entity("ProyectoWeb2.Models.NewsSource", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("categoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<long>("userId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_news_sources");

                    b.HasIndex("categoryId")
                        .HasDatabaseName("ix_news_sources_category_id");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_news_sources_user_id");

                    b.ToTable("news_sources");
                });

            modelBuilder.Entity("ProyectoWeb2.Models.Role", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id")
                        .HasName("pk_roles");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("ProyectoWeb2.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("authCode")
                        .HasColumnType("text")
                        .HasColumnName("auth_code");

                    b.Property<string>("email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("firstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<bool>("isLogged")
                        .HasColumnType("boolean")
                        .HasColumnName("is_logged");

                    b.Property<string>("password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<bool>("registerConfirmation")
                        .HasColumnType("boolean")
                        .HasColumnName("register_confirmation");

                    b.Property<long>("roleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<string>("token")
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.HasKey("id")
                        .HasName("pk_users");

                    b.HasIndex("roleId")
                        .HasDatabaseName("ix_users_role_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ProyectoWeb2Api.Models.Tags", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("tag")
                        .HasColumnType("text")
                        .HasColumnName("tag");

                    b.Property<long>("userId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("id")
                        .HasName("pk_tags");

                    b.HasIndex("userId")
                        .HasDatabaseName("ix_tags_user_id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("ProyectoWeb2.Models.News", b =>
                {
                    b.HasOne("ProyectoWeb2.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .HasConstraintName("fk_news_categorys_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoWeb2.Models.NewsSource", "newsSource")
                        .WithMany()
                        .HasForeignKey("newsSourceId")
                        .HasConstraintName("fk_news_news_sources_news_source_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoWeb2.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .HasConstraintName("fk_news_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("newsSource");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProyectoWeb2.Models.NewsSource", b =>
                {
                    b.HasOne("ProyectoWeb2.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .HasConstraintName("fk_news_sources_categorys_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoWeb2.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .HasConstraintName("fk_news_sources_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProyectoWeb2.Models.User", b =>
                {
                    b.HasOne("ProyectoWeb2.Models.Role", "role")
                        .WithMany()
                        .HasForeignKey("roleId")
                        .HasConstraintName("fk_users_roles_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("ProyectoWeb2Api.Models.Tags", b =>
                {
                    b.HasOne("ProyectoWeb2.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .HasConstraintName("fk_tags_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
